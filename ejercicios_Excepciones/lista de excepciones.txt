– BaseException: Clase de la que heredan todas las excepciones.
– Exception (BaseException): Super clase de todas las excepciones que no sean de salida.
– GeneratorExit (Exception): Se pide que se salga de un generador.
– StandarError (Exception): Clase base para todas las excepciones que no tengan que ver con salir del intérprete.
– ArithmeticError (StandardError): Clase base para los errores aritméticos.
– FloatingPointError (ArithmeticError): Error en una operación de coma flotante.
– OverflowError (ArithmeticError): Resultado demasiado grande para poder representarse.
– ZeroDivisionError (ArithmeticError): Lanzada cuando el segundo argumento de una operación de división o módulo, era 0.
– AssertionError (StandardError): Falló la condición de una sentencia assert.
– AttributeError (StandardError): No se encontró el atributo.
– EOFError (StandardError): Se intentó leer más allá del final de fichero.
– EnvironmentError (StandardError): Clase padre de los errores relacionados con la entrada/salida.
– IOError (EnvironmentError): Error en una operación de entrada/salida.
– OSError (EnvironmentError): Error en una llamada a sistema.
– WindowsError (OSError): Error en una llamada a sistema en Windows.
– ImportError (StandardError): No se encuentra el módulo o el elemento del módulo que se quería importar.
– LookupError (StandardError): Clase padre de los errores de acceso.
– IndexError (LookupError): El índice de la secuencia está fuera del rango posible.
– KeyError (LookupError): La clave no existe.
– MemoryError (StandardError): Memoria disponible insuficiente.
– NameError (StandardError): No se encontró ningún elemento con ese nombre. Suele lanzarse cuando se usan varibles no declaradas (se puede deber a errores de tipeo).
– UnboundLocalError (NameError): El nombre no está asociado a ninguna variable.
– ReferenceError (StandardError): El objeto no tiene ninguna referencia fuerte apuntando hacia él.
– RuntimeError (StandardError): Error en tiempo de ejecución no especificado.
– NotImplementedError (RuntimeError): Ese método o función no está implementado.
– SyntaxError (StandardError): Clase padre para los errores sintácticos.
– IndentationError (SyntaxError): Error en la indentación del archivo.
– TabError (IndentationError): Error debido a la mezcla de espacios y tabuladores.
– SystemError (StandardError): Error interno del intérprete.
– TypeError (StandardError): Tipo de argumento no apropiado.
– ValueError (StandardError): Valor del argumento no apropiado.
– UnicodeError (ValueError): Clase padre para los errores relacionados con unicode.
– UnicodeDecodeError (UnicodeError): Error de decodificación unicode.
– UnicodeEncodeError (UnicodeError): Error de codificación unicode.
– UnicodeTranslateError (UnicodeError): Error de traducción unicode.
– StopIteration (Exception): Se utiliza para indicar el final del iterador.
– Warning (Exception): Clase padre para los avisos.
– DeprecationWarning (Warning): Clase padre para avisos sobre características obsoletas.
– FutureWarning (Warning): Aviso. La semántica de la construcción cambiará en un futuro.
– ImportWarning (Warning): Aviso sobre posibles errores a la hora de importar.
– PendingDeprecationWarning (Warning): Aviso sobre características que se marcarán como obsoletas en un futuro próximo.
– RuntimeWarning (Warning): Aviso sobre comportmaientos dudosos en tiempo de ejecución.
– SyntaxWarning (Warning): Aviso sobre sintaxis dudosa.
– UnicodeWarning (Warning): Aviso sobre problemas relacionados con Unicode, sobre todo con problemas de conversión.
– UserWarning (Warning): Clase padre para avisos creados por el programador.
– KeyboardInterrupt (BaseException): El programa fué interrumpido por el usuario.
– SystemExit (BaseException): Petición del intérprete para terminar la ejecución.